// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceAmazonSqsAWSRegionEnum - AWS Region of the SQS Queue
type SourceAmazonSqsAWSRegionEnum string

const (
	SourceAmazonSqsAWSRegionEnumUsEast1      SourceAmazonSqsAWSRegionEnum = "us-east-1"
	SourceAmazonSqsAWSRegionEnumUsEast2      SourceAmazonSqsAWSRegionEnum = "us-east-2"
	SourceAmazonSqsAWSRegionEnumUsWest1      SourceAmazonSqsAWSRegionEnum = "us-west-1"
	SourceAmazonSqsAWSRegionEnumUsWest2      SourceAmazonSqsAWSRegionEnum = "us-west-2"
	SourceAmazonSqsAWSRegionEnumAfSouth1     SourceAmazonSqsAWSRegionEnum = "af-south-1"
	SourceAmazonSqsAWSRegionEnumApEast1      SourceAmazonSqsAWSRegionEnum = "ap-east-1"
	SourceAmazonSqsAWSRegionEnumApSouth1     SourceAmazonSqsAWSRegionEnum = "ap-south-1"
	SourceAmazonSqsAWSRegionEnumApNortheast1 SourceAmazonSqsAWSRegionEnum = "ap-northeast-1"
	SourceAmazonSqsAWSRegionEnumApNortheast2 SourceAmazonSqsAWSRegionEnum = "ap-northeast-2"
	SourceAmazonSqsAWSRegionEnumApNortheast3 SourceAmazonSqsAWSRegionEnum = "ap-northeast-3"
	SourceAmazonSqsAWSRegionEnumApSoutheast1 SourceAmazonSqsAWSRegionEnum = "ap-southeast-1"
	SourceAmazonSqsAWSRegionEnumApSoutheast2 SourceAmazonSqsAWSRegionEnum = "ap-southeast-2"
	SourceAmazonSqsAWSRegionEnumCaCentral1   SourceAmazonSqsAWSRegionEnum = "ca-central-1"
	SourceAmazonSqsAWSRegionEnumCnNorth1     SourceAmazonSqsAWSRegionEnum = "cn-north-1"
	SourceAmazonSqsAWSRegionEnumCnNorthwest1 SourceAmazonSqsAWSRegionEnum = "cn-northwest-1"
	SourceAmazonSqsAWSRegionEnumEuCentral1   SourceAmazonSqsAWSRegionEnum = "eu-central-1"
	SourceAmazonSqsAWSRegionEnumEuNorth1     SourceAmazonSqsAWSRegionEnum = "eu-north-1"
	SourceAmazonSqsAWSRegionEnumEuSouth1     SourceAmazonSqsAWSRegionEnum = "eu-south-1"
	SourceAmazonSqsAWSRegionEnumEuWest1      SourceAmazonSqsAWSRegionEnum = "eu-west-1"
	SourceAmazonSqsAWSRegionEnumEuWest2      SourceAmazonSqsAWSRegionEnum = "eu-west-2"
	SourceAmazonSqsAWSRegionEnumEuWest3      SourceAmazonSqsAWSRegionEnum = "eu-west-3"
	SourceAmazonSqsAWSRegionEnumSaEast1      SourceAmazonSqsAWSRegionEnum = "sa-east-1"
	SourceAmazonSqsAWSRegionEnumMeSouth1     SourceAmazonSqsAWSRegionEnum = "me-south-1"
	SourceAmazonSqsAWSRegionEnumUsGovEast1   SourceAmazonSqsAWSRegionEnum = "us-gov-east-1"
	SourceAmazonSqsAWSRegionEnumUsGovWest1   SourceAmazonSqsAWSRegionEnum = "us-gov-west-1"
)

func (e *SourceAmazonSqsAWSRegionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "us-east-1":
		fallthrough
	case "us-east-2":
		fallthrough
	case "us-west-1":
		fallthrough
	case "us-west-2":
		fallthrough
	case "af-south-1":
		fallthrough
	case "ap-east-1":
		fallthrough
	case "ap-south-1":
		fallthrough
	case "ap-northeast-1":
		fallthrough
	case "ap-northeast-2":
		fallthrough
	case "ap-northeast-3":
		fallthrough
	case "ap-southeast-1":
		fallthrough
	case "ap-southeast-2":
		fallthrough
	case "ca-central-1":
		fallthrough
	case "cn-north-1":
		fallthrough
	case "cn-northwest-1":
		fallthrough
	case "eu-central-1":
		fallthrough
	case "eu-north-1":
		fallthrough
	case "eu-south-1":
		fallthrough
	case "eu-west-1":
		fallthrough
	case "eu-west-2":
		fallthrough
	case "eu-west-3":
		fallthrough
	case "sa-east-1":
		fallthrough
	case "me-south-1":
		fallthrough
	case "us-gov-east-1":
		fallthrough
	case "us-gov-west-1":
		*e = SourceAmazonSqsAWSRegionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonSqsAWSRegionEnum: %s", s)
	}
}

type SourceAmazonSqsAmazonSqsEnum string

const (
	SourceAmazonSqsAmazonSqsEnumAmazonSqs SourceAmazonSqsAmazonSqsEnum = "amazon-sqs"
)

func (e *SourceAmazonSqsAmazonSqsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "amazon-sqs":
		*e = SourceAmazonSqsAmazonSqsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonSqsAmazonSqsEnum: %s", s)
	}
}

// SourceAmazonSqs - The values required to configure the source.
type SourceAmazonSqs struct {
	// The Access Key ID of the AWS IAM Role to use for pulling messages
	AccessKey *string `json:"access_key,omitempty"`
	// Comma separated list of Mesage Attribute names to return
	AttributesToReturn *string `json:"attributes_to_return,omitempty"`
	// If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail.
	DeleteMessages bool `json:"delete_messages"`
	// Max amount of messages to get in one batch (10 max)
	MaxBatchSize *int64 `json:"max_batch_size,omitempty"`
	// Max amount of time in seconds to wait for messages in a single poll (20 max)
	MaxWaitTime *int64 `json:"max_wait_time,omitempty"`
	// URL of the SQS Queue
	QueueURL string `json:"queue_url"`
	// AWS Region of the SQS Queue
	Region SourceAmazonSqsAWSRegionEnum `json:"region"`
	// The Secret Key of the AWS IAM Role to use for pulling messages
	SecretKey  *string                      `json:"secret_key,omitempty"`
	SourceType SourceAmazonSqsAmazonSqsEnum `json:"sourceType"`
	// Modify the Visibility Timeout of the individual message from the Queue's default (seconds).
	VisibilityTimeout *int64 `json:"visibility_timeout,omitempty"`
}
