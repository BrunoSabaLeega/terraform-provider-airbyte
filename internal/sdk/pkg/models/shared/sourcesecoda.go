// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceSecodaSecodaEnum string

const (
	SourceSecodaSecodaEnumSecoda SourceSecodaSecodaEnum = "secoda"
)

func (e SourceSecodaSecodaEnum) ToPointer() *SourceSecodaSecodaEnum {
	return &e
}

func (e *SourceSecodaSecodaEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "secoda":
		*e = SourceSecodaSecodaEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSecodaSecodaEnum: %v", v)
	}
}

type SourceSecoda struct {
	// Your API Access Key. See <a href="https://docs.secoda.co/secoda-api/authentication">here</a>. The key is case sensitive.
	APIKey     string                 `json:"api_key"`
	SourceType SourceSecodaSecodaEnum `json:"sourceType"`
}
