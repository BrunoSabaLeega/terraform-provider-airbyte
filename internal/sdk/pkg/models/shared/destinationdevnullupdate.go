// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

type DestinationDevNullUpdateTestDestinationSilentTestDestinationType string

const (
	DestinationDevNullUpdateTestDestinationSilentTestDestinationTypeSilent DestinationDevNullUpdateTestDestinationSilentTestDestinationType = "SILENT"
)

func (e DestinationDevNullUpdateTestDestinationSilentTestDestinationType) ToPointer() *DestinationDevNullUpdateTestDestinationSilentTestDestinationType {
	return &e
}

func (e *DestinationDevNullUpdateTestDestinationSilentTestDestinationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SILENT":
		*e = DestinationDevNullUpdateTestDestinationSilentTestDestinationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationDevNullUpdateTestDestinationSilentTestDestinationType: %v", v)
	}
}

// DestinationDevNullUpdateTestDestinationSilent - The type of destination to be used
type DestinationDevNullUpdateTestDestinationSilent struct {
	TestDestinationType DestinationDevNullUpdateTestDestinationSilentTestDestinationType `json:"test_destination_type"`
}

type DestinationDevNullUpdateTestDestinationType string

const (
	DestinationDevNullUpdateTestDestinationTypeDestinationDevNullUpdateTestDestinationSilent DestinationDevNullUpdateTestDestinationType = "destination-dev-null-update_Test Destination_Silent"
)

type DestinationDevNullUpdateTestDestination struct {
	DestinationDevNullUpdateTestDestinationSilent *DestinationDevNullUpdateTestDestinationSilent

	Type DestinationDevNullUpdateTestDestinationType
}

func CreateDestinationDevNullUpdateTestDestinationDestinationDevNullUpdateTestDestinationSilent(destinationDevNullUpdateTestDestinationSilent DestinationDevNullUpdateTestDestinationSilent) DestinationDevNullUpdateTestDestination {
	typ := DestinationDevNullUpdateTestDestinationTypeDestinationDevNullUpdateTestDestinationSilent

	return DestinationDevNullUpdateTestDestination{
		DestinationDevNullUpdateTestDestinationSilent: &destinationDevNullUpdateTestDestinationSilent,
		Type: typ,
	}
}

func (u *DestinationDevNullUpdateTestDestination) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	destinationDevNullUpdateTestDestinationSilent := new(DestinationDevNullUpdateTestDestinationSilent)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&destinationDevNullUpdateTestDestinationSilent); err == nil {
		u.DestinationDevNullUpdateTestDestinationSilent = destinationDevNullUpdateTestDestinationSilent
		u.Type = DestinationDevNullUpdateTestDestinationTypeDestinationDevNullUpdateTestDestinationSilent
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DestinationDevNullUpdateTestDestination) MarshalJSON() ([]byte, error) {
	if u.DestinationDevNullUpdateTestDestinationSilent != nil {
		return json.Marshal(u.DestinationDevNullUpdateTestDestinationSilent)
	}

	return nil, nil
}

type DestinationDevNullUpdate struct {
	// The type of destination to be used
	TestDestination DestinationDevNullUpdateTestDestination `json:"test_destination"`
}
