// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationRocksetRockset string

const (
	DestinationRocksetRocksetRockset DestinationRocksetRockset = "rockset"
)

func (e DestinationRocksetRockset) ToPointer() *DestinationRocksetRockset {
	return &e
}

func (e *DestinationRocksetRockset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rockset":
		*e = DestinationRocksetRockset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationRocksetRockset: %v", v)
	}
}

type DestinationRockset struct {
	// Rockset api key
	APIKey string `json:"api_key"`
	// Rockset api URL
	APIServer       *string                   `json:"api_server,omitempty"`
	DestinationType DestinationRocksetRockset `json:"destinationType"`
	// The Rockset workspace in which collections will be created + written to.
	Workspace string `json:"workspace"`
}
