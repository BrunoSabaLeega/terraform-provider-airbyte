// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationRabbitmqRabbitmqEnum string

const (
	DestinationRabbitmqRabbitmqEnumRabbitmq DestinationRabbitmqRabbitmqEnum = "rabbitmq"
)

func (e DestinationRabbitmqRabbitmqEnum) ToPointer() *DestinationRabbitmqRabbitmqEnum {
	return &e
}

func (e *DestinationRabbitmqRabbitmqEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rabbitmq":
		*e = DestinationRabbitmqRabbitmqEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationRabbitmqRabbitmqEnum: %v", v)
	}
}

type DestinationRabbitmq struct {
	DestinationType DestinationRabbitmqRabbitmqEnum `json:"destinationType"`
	// The exchange name.
	Exchange *string `json:"exchange,omitempty"`
	// The RabbitMQ host name.
	Host string `json:"host"`
	// The password to connect.
	Password *string `json:"password,omitempty"`
	// The RabbitMQ port.
	Port *int64 `json:"port,omitempty"`
	// The routing key.
	RoutingKey string `json:"routing_key"`
	// SSL enabled.
	Ssl *bool `json:"ssl,omitempty"`
	// The username to connect.
	Username *string `json:"username,omitempty"`
	// The RabbitMQ virtual host name.
	VirtualHost *string `json:"virtual_host,omitempty"`
}
