// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceDelightedDelightedEnum string

const (
	SourceDelightedDelightedEnumDelighted SourceDelightedDelightedEnum = "delighted"
)

func (e SourceDelightedDelightedEnum) ToPointer() *SourceDelightedDelightedEnum {
	return &e
}

func (e *SourceDelightedDelightedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delighted":
		*e = SourceDelightedDelightedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceDelightedDelightedEnum: %v", v)
	}
}

// SourceDelighted - The values required to configure the source.
type SourceDelighted struct {
	// A Delighted API key.
	APIKey string `json:"api_key"`
	// The date from which you'd like to replicate the data
	Since      time.Time                    `json:"since"`
	SourceType SourceDelightedDelightedEnum `json:"sourceType"`
}
