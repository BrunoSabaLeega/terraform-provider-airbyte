// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceDelightedDelighted string

const (
	SourceDelightedDelightedDelighted SourceDelightedDelighted = "delighted"
)

func (e SourceDelightedDelighted) ToPointer() *SourceDelightedDelighted {
	return &e
}

func (e *SourceDelightedDelighted) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delighted":
		*e = SourceDelightedDelighted(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceDelightedDelighted: %v", v)
	}
}

type SourceDelighted struct {
	// A Delighted API key.
	APIKey string `json:"api_key"`
	// The date from which you'd like to replicate the data
	Since      time.Time                `json:"since"`
	SourceType SourceDelightedDelighted `json:"sourceType"`
}
