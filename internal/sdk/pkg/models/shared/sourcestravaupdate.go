// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceStravaUpdateAuthType string

const (
	SourceStravaUpdateAuthTypeClient SourceStravaUpdateAuthType = "Client"
)

func (e SourceStravaUpdateAuthType) ToPointer() *SourceStravaUpdateAuthType {
	return &e
}

func (e *SourceStravaUpdateAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client":
		*e = SourceStravaUpdateAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceStravaUpdateAuthType: %v", v)
	}
}

type SourceStravaUpdate struct {
	// The Athlete ID of your Strava developer application.
	AthleteID int64                       `json:"athlete_id"`
	AuthType  *SourceStravaUpdateAuthType `json:"auth_type,omitempty"`
	// The Client ID of your Strava developer application.
	ClientID string `json:"client_id"`
	// The Client Secret of your Strava developer application.
	ClientSecret string `json:"client_secret"`
	// The Refresh Token with the activity: read_all permissions.
	RefreshToken string `json:"refresh_token"`
	// UTC date and time. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
}
