// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceGridlyGridlyEnum string

const (
	SourceGridlyGridlyEnumGridly SourceGridlyGridlyEnum = "gridly"
)

func (e *SourceGridlyGridlyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "gridly":
		*e = SourceGridlyGridlyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGridlyGridlyEnum: %s", s)
	}
}

// SourceGridly - The values required to configure the source.
type SourceGridly struct {
	APIKey string `json:"api_key"`
	// ID of a grid, or can be ID of a branch
	GridID     string                 `json:"grid_id"`
	SourceType SourceGridlyGridlyEnum `json:"sourceType"`
}
