// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceRailzRailzEnum string

const (
	SourceRailzRailzEnumRailz SourceRailzRailzEnum = "railz"
)

func (e SourceRailzRailzEnum) ToPointer() *SourceRailzRailzEnum {
	return &e
}

func (e *SourceRailzRailzEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "railz":
		*e = SourceRailzRailzEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceRailzRailzEnum: %v", v)
	}
}

type SourceRailz struct {
	// Client ID (client_id)
	ClientID string `json:"client_id"`
	// Secret key (secret_key)
	SecretKey  string               `json:"secret_key"`
	SourceType SourceRailzRailzEnum `json:"sourceType"`
	// Start date
	StartDate string `json:"start_date"`
}
