// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/internal/sdk/pkg/types"
)

// SourceNytimesPeriodUsedForMostPopularStreamsEnum - Period of time (in days)
type SourceNytimesPeriodUsedForMostPopularStreamsEnum string

const (
	SourceNytimesPeriodUsedForMostPopularStreamsEnumOne    SourceNytimesPeriodUsedForMostPopularStreamsEnum = "1"
	SourceNytimesPeriodUsedForMostPopularStreamsEnumSeven  SourceNytimesPeriodUsedForMostPopularStreamsEnum = "7"
	SourceNytimesPeriodUsedForMostPopularStreamsEnumThirty SourceNytimesPeriodUsedForMostPopularStreamsEnum = "30"
)

func (e *SourceNytimesPeriodUsedForMostPopularStreamsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "7":
		fallthrough
	case "30":
		*e = SourceNytimesPeriodUsedForMostPopularStreamsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceNytimesPeriodUsedForMostPopularStreamsEnum: %s", s)
	}
}

// SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum - Share Type
type SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum string

const (
	SourceNytimesShareTypeUsedForMostPopularSharedStreamEnumFacebook SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum = "facebook"
)

func (e *SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "facebook":
		*e = SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum: %s", s)
	}
}

type SourceNytimesNytimesEnum string

const (
	SourceNytimesNytimesEnumNytimes SourceNytimesNytimesEnum = "nytimes"
)

func (e *SourceNytimesNytimesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "nytimes":
		*e = SourceNytimesNytimesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceNytimesNytimesEnum: %s", s)
	}
}

// SourceNytimes - The values required to configure the source.
type SourceNytimes struct {
	// API Key
	APIKey string `json:"api_key"`
	// End date to stop the article retrieval (format YYYY-MM)
	EndDate *types.Date `json:"end_date,omitempty"`
	// Period of time (in days)
	Period SourceNytimesPeriodUsedForMostPopularStreamsEnum `json:"period"`
	// Share Type
	ShareType  *SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum `json:"share_type,omitempty"`
	SourceType SourceNytimesNytimesEnum                                  `json:"sourceType"`
	// Start date to begin the article retrieval (format YYYY-MM)
	StartDate types.Date `json:"start_date"`
}
