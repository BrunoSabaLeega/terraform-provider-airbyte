// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationKinesisKinesis string

const (
	DestinationKinesisKinesisKinesis DestinationKinesisKinesis = "kinesis"
)

func (e DestinationKinesisKinesis) ToPointer() *DestinationKinesisKinesis {
	return &e
}

func (e *DestinationKinesisKinesis) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "kinesis":
		*e = DestinationKinesisKinesis(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationKinesisKinesis: %v", v)
	}
}

type DestinationKinesis struct {
	// Generate the AWS Access Key for current user.
	AccessKey string `json:"accessKey"`
	// Buffer size for storing kinesis records before being batch streamed.
	BufferSize      int64                     `json:"bufferSize"`
	DestinationType DestinationKinesisKinesis `json:"destinationType"`
	// AWS Kinesis endpoint.
	Endpoint string `json:"endpoint"`
	// The AWS Private Key - a string of numbers and letters that are unique for each account, also known as a "recovery phrase".
	PrivateKey string `json:"privateKey"`
	// AWS region. Your account determines the Regions that are available to you.
	Region string `json:"region"`
	// Number of shards to which the data should be streamed.
	ShardCount int64 `json:"shardCount"`
}
