// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationConvexConvexEnum string

const (
	DestinationConvexConvexEnumConvex DestinationConvexConvexEnum = "convex"
)

func (e *DestinationConvexConvexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "convex":
		*e = DestinationConvexConvexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationConvexConvexEnum: %s", s)
	}
}

// DestinationConvex - The values required to configure the destination.
type DestinationConvex struct {
	// API access key used to send data to a Convex deployment.
	AccessKey string `json:"access_key"`
	// URL of the Convex deployment that is the destination
	DeploymentURL   string                      `json:"deployment_url"`
	DestinationType DestinationConvexConvexEnum `json:"destinationType"`
}
