// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationConvexConvex string

const (
	DestinationConvexConvexConvex DestinationConvexConvex = "convex"
)

func (e DestinationConvexConvex) ToPointer() *DestinationConvexConvex {
	return &e
}

func (e *DestinationConvexConvex) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "convex":
		*e = DestinationConvexConvex(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationConvexConvex: %v", v)
	}
}

type DestinationConvex struct {
	// API access key used to send data to a Convex deployment.
	AccessKey string `json:"access_key"`
	// URL of the Convex deployment that is the destination
	DeploymentURL   string                  `json:"deployment_url"`
	DestinationType DestinationConvexConvex `json:"destinationType"`
}
