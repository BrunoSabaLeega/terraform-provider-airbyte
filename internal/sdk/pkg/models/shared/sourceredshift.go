// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceRedshiftRedshiftEnum string

const (
	SourceRedshiftRedshiftEnumRedshift SourceRedshiftRedshiftEnum = "redshift"
)

func (e SourceRedshiftRedshiftEnum) ToPointer() *SourceRedshiftRedshiftEnum {
	return &e
}

func (e *SourceRedshiftRedshiftEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redshift":
		*e = SourceRedshiftRedshiftEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceRedshiftRedshiftEnum: %v", v)
	}
}

// SourceRedshift - The values required to configure the source.
type SourceRedshift struct {
	// Name of the database.
	Database string `json:"database"`
	// Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).
	Host string `json:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcURLParams *string `json:"jdbc_url_params,omitempty"`
	// Password associated with the username.
	Password string `json:"password"`
	// Port of the database.
	Port int64 `json:"port"`
	// The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.
	Schemas    []string                   `json:"schemas,omitempty"`
	SourceType SourceRedshiftRedshiftEnum `json:"sourceType"`
	// Username to use to access the database.
	Username string `json:"username"`
}
