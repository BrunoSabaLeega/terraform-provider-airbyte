// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceMyHoursMyHours string

const (
	SourceMyHoursMyHoursMyHours SourceMyHoursMyHours = "my-hours"
)

func (e SourceMyHoursMyHours) ToPointer() *SourceMyHoursMyHours {
	return &e
}

func (e *SourceMyHoursMyHours) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "my-hours":
		*e = SourceMyHoursMyHours(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceMyHoursMyHours: %v", v)
	}
}

type SourceMyHours struct {
	// Your My Hours username
	Email string `json:"email"`
	// Pagination size used for retrieving logs in days
	LogsBatchSize *int64 `json:"logs_batch_size,omitempty"`
	// The password associated to the username
	Password   string               `json:"password"`
	SourceType SourceMyHoursMyHours `json:"sourceType"`
	// Start date for collecting time logs
	StartDate string `json:"start_date"`
}
