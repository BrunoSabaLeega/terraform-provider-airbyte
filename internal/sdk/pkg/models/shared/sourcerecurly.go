// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceRecurlyRecurlyEnum string

const (
	SourceRecurlyRecurlyEnumRecurly SourceRecurlyRecurlyEnum = "recurly"
)

func (e *SourceRecurlyRecurlyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "recurly":
		*e = SourceRecurlyRecurlyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceRecurlyRecurlyEnum: %s", s)
	}
}

// SourceRecurly - The values required to configure the source.
type SourceRecurly struct {
	// Recurly API Key. See the  <a href="https://docs.airbyte.com/integrations/sources/recurly">docs</a> for more information on how to generate this key.
	APIKey string `json:"api_key"`
	// ISO8601 timestamp from which the replication from Recurly API will start from.
	BeginTime *string `json:"begin_time,omitempty"`
	// ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.
	EndTime    *string                  `json:"end_time,omitempty"`
	SourceType SourceRecurlyRecurlyEnum `json:"sourceType"`
}
