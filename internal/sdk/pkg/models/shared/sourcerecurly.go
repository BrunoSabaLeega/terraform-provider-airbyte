// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceRecurlyRecurly string

const (
	SourceRecurlyRecurlyRecurly SourceRecurlyRecurly = "recurly"
)

func (e SourceRecurlyRecurly) ToPointer() *SourceRecurlyRecurly {
	return &e
}

func (e *SourceRecurlyRecurly) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "recurly":
		*e = SourceRecurlyRecurly(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceRecurlyRecurly: %v", v)
	}
}

type SourceRecurly struct {
	// Recurly API Key. See the  <a href="https://docs.airbyte.com/integrations/sources/recurly">docs</a> for more information on how to generate this key.
	APIKey string `json:"api_key"`
	// ISO8601 timestamp from which the replication from Recurly API will start from.
	BeginTime *string `json:"begin_time,omitempty"`
	// ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.
	EndTime    *string              `json:"end_time,omitempty"`
	SourceType SourceRecurlyRecurly `json:"sourceType"`
}
