// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceInstatusInstatusEnum string

const (
	SourceInstatusInstatusEnumInstatus SourceInstatusInstatusEnum = "instatus"
)

func (e SourceInstatusInstatusEnum) ToPointer() *SourceInstatusInstatusEnum {
	return &e
}

func (e *SourceInstatusInstatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "instatus":
		*e = SourceInstatusInstatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceInstatusInstatusEnum: %v", v)
	}
}

// SourceInstatus - The values required to configure the source.
type SourceInstatus struct {
	// Instatus REST API key
	APIKey     string                     `json:"api_key"`
	SourceType SourceInstatusInstatusEnum `json:"sourceType"`
}
