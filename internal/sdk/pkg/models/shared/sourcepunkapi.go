// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourcePunkAPIPunkAPI string

const (
	SourcePunkAPIPunkAPIPunkAPI SourcePunkAPIPunkAPI = "punk-api"
)

func (e SourcePunkAPIPunkAPI) ToPointer() *SourcePunkAPIPunkAPI {
	return &e
}

func (e *SourcePunkAPIPunkAPI) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "punk-api":
		*e = SourcePunkAPIPunkAPI(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourcePunkAPIPunkAPI: %v", v)
	}
}

type SourcePunkAPI struct {
	// To extract specific data with Unique ID
	BrewedAfter string `json:"brewed_after"`
	// To extract specific data with Unique ID
	BrewedBefore string `json:"brewed_before"`
	// To extract specific data with Unique ID
	ID         *string              `json:"id,omitempty"`
	SourceType SourcePunkAPIPunkAPI `json:"sourceType"`
}
