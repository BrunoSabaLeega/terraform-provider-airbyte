// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceXeroAuthenticateViaXeroOAuth struct {
	// Enter your Xero application's access token
	AccessToken string `json:"access_token"`
	// Enter your Xero application's Client ID
	ClientID string `json:"client_id"`
	// Enter your Xero application's Client Secret
	ClientSecret string `json:"client_secret"`
	// Enter your Xero application's refresh token
	RefreshToken string `json:"refresh_token"`
	// The date-time when the access token should be refreshed
	TokenExpiryDate string `json:"token_expiry_date"`
}

type SourceXeroXeroEnum string

const (
	SourceXeroXeroEnumXero SourceXeroXeroEnum = "xero"
)

func (e *SourceXeroXeroEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xero":
		*e = SourceXeroXeroEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceXeroXeroEnum: %s", s)
	}
}

// SourceXero - The values required to configure the source.
type SourceXero struct {
	Authentication SourceXeroAuthenticateViaXeroOAuth `json:"authentication"`
	SourceType     SourceXeroXeroEnum                 `json:"sourceType"`
	// UTC date and time in the format YYYY-MM-DDTHH:mm:ssZ. Any data with created_at before this data will not be synced.
	StartDate time.Time `json:"start_date"`
	// Enter your Xero organization's Tenant ID
	TenantID string `json:"tenant_id"`
}
