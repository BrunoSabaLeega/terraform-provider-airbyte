// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceZoomZoomEnum string

const (
	SourceZoomZoomEnumZoom SourceZoomZoomEnum = "zoom"
)

func (e SourceZoomZoomEnum) ToPointer() *SourceZoomZoomEnum {
	return &e
}

func (e *SourceZoomZoomEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "zoom":
		*e = SourceZoomZoomEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceZoomZoomEnum: %v", v)
	}
}

type SourceZoom struct {
	// JWT Token
	JwtToken   string             `json:"jwt_token"`
	SourceType SourceZoomZoomEnum `json:"sourceType"`
}
