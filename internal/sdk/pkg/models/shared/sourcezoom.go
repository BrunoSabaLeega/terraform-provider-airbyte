// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceZoomZoom string

const (
	SourceZoomZoomZoom SourceZoomZoom = "zoom"
)

func (e SourceZoomZoom) ToPointer() *SourceZoomZoom {
	return &e
}

func (e *SourceZoomZoom) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "zoom":
		*e = SourceZoomZoom(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceZoomZoom: %v", v)
	}
}

type SourceZoom struct {
	// JWT Token
	JwtToken   string         `json:"jwt_token"`
	SourceType SourceZoomZoom `json:"sourceType"`
}
