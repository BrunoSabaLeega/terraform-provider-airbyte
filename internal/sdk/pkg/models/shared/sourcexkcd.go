// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceXkcdXkcd string

const (
	SourceXkcdXkcdXkcd SourceXkcdXkcd = "xkcd"
)

func (e SourceXkcdXkcd) ToPointer() *SourceXkcdXkcd {
	return &e
}

func (e *SourceXkcdXkcd) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xkcd":
		*e = SourceXkcdXkcd(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceXkcdXkcd: %v", v)
	}
}

type SourceXkcd struct {
	SourceType SourceXkcdXkcd `json:"sourceType"`
}
