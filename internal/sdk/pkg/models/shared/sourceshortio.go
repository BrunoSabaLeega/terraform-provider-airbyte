// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceShortioShortioEnum string

const (
	SourceShortioShortioEnumShortio SourceShortioShortioEnum = "shortio"
)

func (e SourceShortioShortioEnum) ToPointer() *SourceShortioShortioEnum {
	return &e
}

func (e *SourceShortioShortioEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shortio":
		*e = SourceShortioShortioEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceShortioShortioEnum: %v", v)
	}
}

// SourceShortio - The values required to configure the source.
type SourceShortio struct {
	DomainID string `json:"domain_id"`
	// Short.io Secret Key
	SecretKey  string                   `json:"secret_key"`
	SourceType SourceShortioShortioEnum `json:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `json:"start_date"`
}
