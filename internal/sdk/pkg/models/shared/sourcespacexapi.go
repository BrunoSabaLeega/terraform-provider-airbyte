// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceSpacexAPISpacexAPIEnum string

const (
	SourceSpacexAPISpacexAPIEnumSpacexAPI SourceSpacexAPISpacexAPIEnum = "spacex-api"
)

func (e SourceSpacexAPISpacexAPIEnum) ToPointer() *SourceSpacexAPISpacexAPIEnum {
	return &e
}

func (e *SourceSpacexAPISpacexAPIEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "spacex-api":
		*e = SourceSpacexAPISpacexAPIEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSpacexAPISpacexAPIEnum: %v", v)
	}
}

type SourceSpacexAPI struct {
	ID         *string                      `json:"id,omitempty"`
	Options    *string                      `json:"options,omitempty"`
	SourceType SourceSpacexAPISpacexAPIEnum `json:"sourceType"`
}
