// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceRechargeRechargeEnum string

const (
	SourceRechargeRechargeEnumRecharge SourceRechargeRechargeEnum = "recharge"
)

func (e *SourceRechargeRechargeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "recharge":
		*e = SourceRechargeRechargeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceRechargeRechargeEnum: %s", s)
	}
}

// SourceRecharge - The values required to configure the source.
type SourceRecharge struct {
	// The value of the Access Token generated. See the <a href="https://docs.airbyte.com/integrations/sources/recharge">docs</a> for more information.
	AccessToken string                     `json:"access_token"`
	SourceType  SourceRechargeRechargeEnum `json:"sourceType"`
	// The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
}
