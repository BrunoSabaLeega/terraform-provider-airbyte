// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceTrelloTrelloEnum string

const (
	SourceTrelloTrelloEnumTrello SourceTrelloTrelloEnum = "trello"
)

func (e *SourceTrelloTrelloEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "trello":
		*e = SourceTrelloTrelloEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceTrelloTrelloEnum: %s", s)
	}
}

// SourceTrello - The values required to configure the source.
type SourceTrello struct {
	// IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated.
	BoardIds []string `json:"board_ids,omitempty"`
	// Trello API key. See the <a href="https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth">docs</a> for instructions on how to generate it.
	Key        string                 `json:"key"`
	SourceType SourceTrelloTrelloEnum `json:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
	// Trello API token. See the <a href="https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth">docs</a> for instructions on how to generate it.
	Token string `json:"token"`
}
