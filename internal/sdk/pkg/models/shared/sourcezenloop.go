// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceZenloopZenloopEnum string

const (
	SourceZenloopZenloopEnumZenloop SourceZenloopZenloopEnum = "zenloop"
)

func (e SourceZenloopZenloopEnum) ToPointer() *SourceZenloopZenloopEnum {
	return &e
}

func (e *SourceZenloopZenloopEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "zenloop":
		*e = SourceZenloopZenloopEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceZenloopZenloopEnum: %v", v)
	}
}

// SourceZenloop - The values required to configure the source.
type SourceZenloop struct {
	// Zenloop API Token. You can get the API token in settings page <a href="https://app.zenloop.com/settings/api">here</a>
	APIToken string `json:"api_token"`
	// Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced
	DateFrom   *string                  `json:"date_from,omitempty"`
	SourceType SourceZenloopZenloopEnum `json:"sourceType"`
	// Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups
	SurveyGroupID *string `json:"survey_group_id,omitempty"`
	// Zenloop Survey ID. Can be found <a href="https://app.zenloop.com/settings/api">here</a>. Leave empty to pull answers from all surveys
	SurveyID *string `json:"survey_id,omitempty"`
}
