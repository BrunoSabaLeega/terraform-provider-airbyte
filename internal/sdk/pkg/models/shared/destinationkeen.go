// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationKeenKeenEnum string

const (
	DestinationKeenKeenEnumKeen DestinationKeenKeenEnum = "keen"
)

func (e DestinationKeenKeenEnum) ToPointer() *DestinationKeenKeenEnum {
	return &e
}

func (e *DestinationKeenKeenEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "keen":
		*e = DestinationKeenKeenEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationKeenKeenEnum: %v", v)
	}
}

// DestinationKeen - The values required to configure the destination.
type DestinationKeen struct {
	// To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
	APIKey          string                  `json:"api_key"`
	DestinationType DestinationKeenKeenEnum `json:"destinationType"`
	// Allow connector to guess keen.timestamp value based on the streamed data.
	InferTimestamp *bool `json:"infer_timestamp,omitempty"`
	// To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
	ProjectID string `json:"project_id"`
}
