// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceDatascopeDatascopeEnum string

const (
	SourceDatascopeDatascopeEnumDatascope SourceDatascopeDatascopeEnum = "datascope"
)

func (e SourceDatascopeDatascopeEnum) ToPointer() *SourceDatascopeDatascopeEnum {
	return &e
}

func (e *SourceDatascopeDatascopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "datascope":
		*e = SourceDatascopeDatascopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceDatascopeDatascopeEnum: %v", v)
	}
}

// SourceDatascope - The values required to configure the source.
type SourceDatascope struct {
	// API Key
	APIKey     string                       `json:"api_key"`
	SourceType SourceDatascopeDatascopeEnum `json:"sourceType"`
	// Start date for the data to be replicated
	StartDate string `json:"start_date"`
}
