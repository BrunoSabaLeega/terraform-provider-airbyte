// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceHubplannerHubplannerEnum string

const (
	SourceHubplannerHubplannerEnumHubplanner SourceHubplannerHubplannerEnum = "hubplanner"
)

func (e SourceHubplannerHubplannerEnum) ToPointer() *SourceHubplannerHubplannerEnum {
	return &e
}

func (e *SourceHubplannerHubplannerEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hubplanner":
		*e = SourceHubplannerHubplannerEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceHubplannerHubplannerEnum: %v", v)
	}
}

// SourceHubplanner - The values required to configure the source.
type SourceHubplanner struct {
	// Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.
	APIKey     string                         `json:"api_key"`
	SourceType SourceHubplannerHubplannerEnum `json:"sourceType"`
}
