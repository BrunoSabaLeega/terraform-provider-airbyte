// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceK6CloudK6CloudEnum string

const (
	SourceK6CloudK6CloudEnumK6Cloud SourceK6CloudK6CloudEnum = "k6-cloud"
)

func (e SourceK6CloudK6CloudEnum) ToPointer() *SourceK6CloudK6CloudEnum {
	return &e
}

func (e *SourceK6CloudK6CloudEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "k6-cloud":
		*e = SourceK6CloudK6CloudEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceK6CloudK6CloudEnum: %v", v)
	}
}

// SourceK6Cloud - The values required to configure the source.
type SourceK6Cloud struct {
	// Your API Token. See <a href="https://k6.io/docs/cloud/integrations/token/">here</a>. The key is case sensitive.
	APIToken   string                   `json:"api_token"`
	SourceType SourceK6CloudK6CloudEnum `json:"sourceType"`
}
