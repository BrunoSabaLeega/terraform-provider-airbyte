// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceYouniumYouniumEnum string

const (
	SourceYouniumYouniumEnumYounium SourceYouniumYouniumEnum = "younium"
)

func (e SourceYouniumYouniumEnum) ToPointer() *SourceYouniumYouniumEnum {
	return &e
}

func (e *SourceYouniumYouniumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "younium":
		*e = SourceYouniumYouniumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceYouniumYouniumEnum: %v", v)
	}
}

// SourceYounium - The values required to configure the source.
type SourceYounium struct {
	// Legal Entity that data should be pulled from
	LegalEntity string `json:"legal_entity"`
	// Account password for younium account API key
	Password string `json:"password"`
	// Property defining if connector is used against playground or production environment
	Playground *bool                    `json:"playground,omitempty"`
	SourceType SourceYouniumYouniumEnum `json:"sourceType"`
	// Username for Younium account
	Username string `json:"username"`
}
