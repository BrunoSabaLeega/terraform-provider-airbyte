// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceFireboltFireboltEnum string

const (
	SourceFireboltFireboltEnumFirebolt SourceFireboltFireboltEnum = "firebolt"
)

func (e SourceFireboltFireboltEnum) ToPointer() *SourceFireboltFireboltEnum {
	return &e
}

func (e *SourceFireboltFireboltEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "firebolt":
		*e = SourceFireboltFireboltEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFireboltFireboltEnum: %v", v)
	}
}

// SourceFirebolt - The values required to configure the source.
type SourceFirebolt struct {
	// Firebolt account to login.
	Account *string `json:"account,omitempty"`
	// The database to connect to.
	Database string `json:"database"`
	// Engine name or url to connect to.
	Engine *string `json:"engine,omitempty"`
	// The host name of your Firebolt database.
	Host *string `json:"host,omitempty"`
	// Firebolt password.
	Password   string                     `json:"password"`
	SourceType SourceFireboltFireboltEnum `json:"sourceType"`
	// Firebolt email address you use to login.
	Username string `json:"username"`
}
