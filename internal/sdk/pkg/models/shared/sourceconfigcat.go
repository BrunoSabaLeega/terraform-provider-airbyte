// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceConfigcatConfigcatEnum string

const (
	SourceConfigcatConfigcatEnumConfigcat SourceConfigcatConfigcatEnum = "configcat"
)

func (e *SourceConfigcatConfigcatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "configcat":
		*e = SourceConfigcatConfigcatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceConfigcatConfigcatEnum: %s", s)
	}
}

// SourceConfigcat - The values required to configure the source.
type SourceConfigcat struct {
	// Basic auth password. See <a href="https://api.configcat.com/docs/#section/Authentication">here</a>.
	Password   string                       `json:"password"`
	SourceType SourceConfigcatConfigcatEnum `json:"sourceType"`
	// Basic auth user name. See <a href="https://api.configcat.com/docs/#section/Authentication">here</a>.
	Username string `json:"username"`
}
