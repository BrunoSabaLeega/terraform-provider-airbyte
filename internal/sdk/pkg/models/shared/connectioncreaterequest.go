// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ConnectionCreateRequest struct {
	// A list of configured stream options for a connection.
	Configurations *StreamConfigurations `json:"configurations,omitempty"`
	DataResidency  *GeographyEnum        `json:"dataResidency,omitempty"`
	DestinationID  string                `json:"destinationId"`
	// Optional name of the connection
	Name *string `json:"name,omitempty"`
	// Define the location where the data will be stored in the destination
	NamespaceDefinition *NamespaceDefinitionEnum `json:"namespaceDefinition,omitempty"`
	// Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
	NamespaceFormat *string `json:"namespaceFormat,omitempty"`
	// Set how Airbyte handles syncs when it detects a non-breaking schema change in the source
	NonBreakingSchemaUpdatesBehavior *NonBreakingSchemaUpdatesBehaviorEnum `json:"nonBreakingSchemaUpdatesBehavior,omitempty"`
	// Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_” causes “projects” => “airbyte_projects”).
	Prefix *string `json:"prefix,omitempty"`
	// schedule for when the the connection should run, per the schedule type
	Schedule *ConnectionScheduleCreate `json:"schedule,omitempty"`
	SourceID string                    `json:"sourceId"`
}
