// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceOmnisendOmnisend string

const (
	SourceOmnisendOmnisendOmnisend SourceOmnisendOmnisend = "omnisend"
)

func (e SourceOmnisendOmnisend) ToPointer() *SourceOmnisendOmnisend {
	return &e
}

func (e *SourceOmnisendOmnisend) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "omnisend":
		*e = SourceOmnisendOmnisend(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceOmnisendOmnisend: %v", v)
	}
}

type SourceOmnisend struct {
	// API Key
	APIKey     string                 `json:"api_key"`
	SourceType SourceOmnisendOmnisend `json:"sourceType"`
}
