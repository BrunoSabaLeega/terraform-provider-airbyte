// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceSalesforceAuthTypeEnum string

const (
	SourceSalesforceAuthTypeEnumClient SourceSalesforceAuthTypeEnum = "Client"
)

func (e *SourceSalesforceAuthTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Client":
		*e = SourceSalesforceAuthTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSalesforceAuthTypeEnum: %s", s)
	}
}

type SourceSalesforceSalesforceEnum string

const (
	SourceSalesforceSalesforceEnumSalesforce SourceSalesforceSalesforceEnum = "salesforce"
)

func (e *SourceSalesforceSalesforceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "salesforce":
		*e = SourceSalesforceSalesforceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSalesforceSalesforceEnum: %s", s)
	}
}

type SourceSalesforceStreamsCriteriaSearchCriteriaEnum string

const (
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumStartsWith    SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "starts with"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumEndsWith      SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "ends with"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumContains      SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "contains"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumExacts        SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "exacts"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumStartsNotWith SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "starts not with"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumEndsNotWith   SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "ends not with"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumNotContains   SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "not contains"
	SourceSalesforceStreamsCriteriaSearchCriteriaEnumNotExacts     SourceSalesforceStreamsCriteriaSearchCriteriaEnum = "not exacts"
)

func (e *SourceSalesforceStreamsCriteriaSearchCriteriaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "starts with":
		fallthrough
	case "ends with":
		fallthrough
	case "contains":
		fallthrough
	case "exacts":
		fallthrough
	case "starts not with":
		fallthrough
	case "ends not with":
		fallthrough
	case "not contains":
		fallthrough
	case "not exacts":
		*e = SourceSalesforceStreamsCriteriaSearchCriteriaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSalesforceStreamsCriteriaSearchCriteriaEnum: %s", s)
	}
}

type SourceSalesforceStreamsCriteria struct {
	Criteria SourceSalesforceStreamsCriteriaSearchCriteriaEnum `json:"criteria"`
	Value    string                                            `json:"value"`
}

// SourceSalesforce - The values required to configure the source.
type SourceSalesforce struct {
	AuthType *SourceSalesforceAuthTypeEnum `json:"auth_type,omitempty"`
	// Enter your Salesforce developer application's <a href="https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG">Client ID</a>
	ClientID string `json:"client_id"`
	// Enter your Salesforce developer application's <a href="https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG">Client secret</a>
	ClientSecret string `json:"client_secret"`
	// Toggle if you're using a <a href="https://help.salesforce.com/s/articleView?id=sf.deploy_sandboxes_parent.htm&type=5">Salesforce Sandbox</a>
	IsSandbox *bool `json:"is_sandbox,omitempty"`
	// Enter your application's <a href="https://developer.salesforce.com/docs/atlas.en-us.mobile_sdk.meta/mobile_sdk/oauth_refresh_token_flow.htm">Salesforce Refresh Token</a> used for Airbyte to access your Salesforce account.
	RefreshToken string                         `json:"refresh_token"`
	SourceType   SourceSalesforceSalesforceEnum `json:"sourceType"`
	// Enter the date in the YYYY-MM-DD format. Airbyte will replicate the data added on and after this date. If this field is blank, Airbyte will replicate the data for last two years.
	StartDate *time.Time `json:"start_date,omitempty"`
	// Filter streams relevant to you
	StreamsCriteria []SourceSalesforceStreamsCriteria `json:"streams_criteria,omitempty"`
}
