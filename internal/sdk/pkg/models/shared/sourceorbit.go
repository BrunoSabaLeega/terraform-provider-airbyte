// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceOrbitOrbit string

const (
	SourceOrbitOrbitOrbit SourceOrbitOrbit = "orbit"
)

func (e SourceOrbitOrbit) ToPointer() *SourceOrbitOrbit {
	return &e
}

func (e *SourceOrbitOrbit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "orbit":
		*e = SourceOrbitOrbit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceOrbitOrbit: %v", v)
	}
}

type SourceOrbit struct {
	// Authorizes you to work with Orbit workspaces associated with the token.
	APIToken   string           `json:"api_token"`
	SourceType SourceOrbitOrbit `json:"sourceType"`
	// Date in the format 2022-06-26. Only load members whose last activities are after this date.
	StartDate *string `json:"start_date,omitempty"`
	// The unique name of the workspace that your API token is associated with.
	Workspace string `json:"workspace"`
}
