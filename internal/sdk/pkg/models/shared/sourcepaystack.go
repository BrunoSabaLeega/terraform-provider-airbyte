// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourcePaystackPaystack string

const (
	SourcePaystackPaystackPaystack SourcePaystackPaystack = "paystack"
)

func (e SourcePaystackPaystack) ToPointer() *SourcePaystackPaystack {
	return &e
}

func (e *SourcePaystackPaystack) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "paystack":
		*e = SourcePaystackPaystack(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourcePaystackPaystack: %v", v)
	}
}

type SourcePaystack struct {
	// When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation.
	LookbackWindowDays *int64 `json:"lookback_window_days,omitempty"`
	// The Paystack API key (usually starts with 'sk_live_'; find yours <a href="https://dashboard.paystack.com/#/settings/developer">here</a>).
	SecretKey  string                 `json:"secret_key"`
	SourceType SourcePaystackPaystack `json:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
}
