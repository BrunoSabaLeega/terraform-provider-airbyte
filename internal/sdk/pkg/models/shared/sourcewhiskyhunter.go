// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceWhiskyHunterWhiskyHunterEnum string

const (
	SourceWhiskyHunterWhiskyHunterEnumWhiskyHunter SourceWhiskyHunterWhiskyHunterEnum = "whisky-hunter"
)

func (e *SourceWhiskyHunterWhiskyHunterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "whisky-hunter":
		*e = SourceWhiskyHunterWhiskyHunterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceWhiskyHunterWhiskyHunterEnum: %s", s)
	}
}

// SourceWhiskyHunter - The values required to configure the source.
type SourceWhiskyHunter struct {
	SourceType SourceWhiskyHunterWhiskyHunterEnum `json:"sourceType"`
}
