// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	customTypes "airbyte/internal/sdk/pkg/types"
)

func (r *SourcePolygonStockAPIResourceModel) ToCreateSDKType() *shared.SourcePolygonStockAPICreateRequest {
	adjusted := new(string)
	if !r.Configuration.Adjusted.IsUnknown() && !r.Configuration.Adjusted.IsNull() {
		*adjusted = r.Configuration.Adjusted.ValueString()
	} else {
		adjusted = nil
	}
	apiKey := r.Configuration.APIKey.ValueString()
	endDate, _ := customTypes.NewDate(r.Configuration.EndDate.ValueString())
	limit := new(int64)
	if !r.Configuration.Limit.IsUnknown() && !r.Configuration.Limit.IsNull() {
		*limit = r.Configuration.Limit.ValueInt64()
	} else {
		limit = nil
	}
	multiplier := r.Configuration.Multiplier.ValueInt64()
	sort := new(string)
	if !r.Configuration.Sort.IsUnknown() && !r.Configuration.Sort.IsNull() {
		*sort = r.Configuration.Sort.ValueString()
	} else {
		sort = nil
	}
	sourceType := shared.SourcePolygonStockAPIPolygonStockAPIEnum(r.Configuration.SourceType.ValueString())
	startDate, _ := customTypes.NewDate(r.Configuration.StartDate.ValueString())
	stocksTicker := r.Configuration.StocksTicker.ValueString()
	timespan := r.Configuration.Timespan.ValueString()
	configuration := shared.SourcePolygonStockAPI{
		Adjusted:     adjusted,
		APIKey:       apiKey,
		EndDate:      endDate,
		Limit:        limit,
		Multiplier:   multiplier,
		Sort:         sort,
		SourceType:   sourceType,
		StartDate:    startDate,
		StocksTicker: stocksTicker,
		Timespan:     timespan,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourcePolygonStockAPICreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourcePolygonStockAPIResourceModel) ToDeleteSDKType() *shared.SourcePolygonStockAPICreateRequest {
	out := r.ToCreateSDKType()
	return out
}
