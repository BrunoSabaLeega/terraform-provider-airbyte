// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	customTypes "airbyte/internal/sdk/pkg/types"
)

func (r *SourceNytimesResourceModel) ToCreateSDKType() *shared.SourceNytimesCreateRequest {
	apiKey := r.Configuration.APIKey.ValueString()
	endDate := new(customTypes.Date)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		*endDate, _ = customTypes.NewDate(r.Configuration.EndDate.ValueString())
	} else {
		endDate = nil
	}
	period := shared.SourceNytimesPeriodUsedForMostPopularStreamsEnum(r.Configuration.Period.ValueInt64())
	shareType := new(shared.SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum)
	if !r.Configuration.ShareType.IsUnknown() && !r.Configuration.ShareType.IsNull() {
		*shareType = shared.SourceNytimesShareTypeUsedForMostPopularSharedStreamEnum(r.Configuration.ShareType.ValueString())
	} else {
		shareType = nil
	}
	sourceType := shared.SourceNytimesNytimesEnum(r.Configuration.SourceType.ValueString())
	startDate, _ := customTypes.NewDate(r.Configuration.StartDate.ValueString())
	configuration := shared.SourceNytimes{
		APIKey:     apiKey,
		EndDate:    endDate,
		Period:     period,
		ShareType:  shareType,
		SourceType: sourceType,
		StartDate:  startDate,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceNytimesCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceNytimesResourceModel) ToDeleteSDKType() *shared.SourceNytimesCreateRequest {
	out := r.ToCreateSDKType()
	return out
}
