// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"openapi/internal/sdk/pkg/models/shared"
)

func (r *ConnectionResourceModel) ToSDKType() *shared.ConnectionCreateRequest {
	destinationID := r.DestinationID.ValueString()
	geography := new(shared.GeographyEnumEnum)
	if !r.Geography.IsUnknown() && !r.Geography.IsNull() {
		*geography = shared.GeographyEnumEnum(r.Geography.ValueString())
	} else {
		geography = nil
	}
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	var schedule *shared.ConnectionScheduleCreate
	if r.Schedule != nil {
		cronExpression := new(string)
		if !r.Schedule.CronExpression.IsUnknown() && !r.Schedule.CronExpression.IsNull() {
			*cronExpression = r.Schedule.CronExpression.ValueString()
		} else {
			cronExpression = nil
		}
		scheduleType := shared.ScheduleTypeEnumEnum(r.Schedule.ScheduleType.ValueString())
		schedule = &shared.ConnectionScheduleCreate{
			CronExpression: cronExpression,
			ScheduleType:   scheduleType,
		}
	}
	sourceID := r.SourceID.ValueString()
	out := shared.ConnectionCreateRequest{
		DestinationID: destinationID,
		Geography:     geography,
		Name:          name,
		Schedule:      schedule,
		SourceID:      sourceID,
	}
	return &out

}

func (r *ConnectionResourceModel) RefreshFromSDKType(resp *shared.ConnectionCreateRequest) {
	r.DestinationID = types.StringValue(resp.DestinationID)
	if resp.Geography != nil {
		r.Geography = types.StringValue(string(*resp.Geography))
	} else {
		r.Geography = types.StringNull()
	}
	if resp.Name != nil {
		r.Name = types.StringValue(*resp.Name)
	} else {
		r.Name = types.StringNull()
	}
	if resp.Schedule == nil {
		r.Schedule = nil
	} else {
		r.Schedule = &ConnectionScheduleCreate{}
		if resp.Schedule.CronExpression != nil {
			r.Schedule.CronExpression = types.StringValue(*resp.Schedule.CronExpression)
		} else {
			r.Schedule.CronExpression = types.StringNull()
		}
		r.Schedule.ScheduleType = types.StringValue(string(resp.Schedule.ScheduleType))
	}
	r.SourceID = types.StringValue(resp.SourceID)

}
