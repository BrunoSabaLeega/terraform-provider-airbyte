// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
)

func (r *SourceAmplitudeResourceModel) ToCreateSDKType() *shared.SourceAmplitudeCreateRequest {
	apiKey := r.Configuration.APIKey.ValueString()
	dataRegion := new(shared.SourceAmplitudeDataRegionEnum)
	if !r.Configuration.DataRegion.IsUnknown() && !r.Configuration.DataRegion.IsNull() {
		*dataRegion = shared.SourceAmplitudeDataRegionEnum(r.Configuration.DataRegion.ValueString())
	} else {
		dataRegion = nil
	}
	requestTimeRange := new(int64)
	if !r.Configuration.RequestTimeRange.IsUnknown() && !r.Configuration.RequestTimeRange.IsNull() {
		*requestTimeRange = r.Configuration.RequestTimeRange.ValueInt64()
	} else {
		requestTimeRange = nil
	}
	secretKey := r.Configuration.SecretKey.ValueString()
	sourceType := shared.SourceAmplitudeAmplitudeEnum(r.Configuration.SourceType.ValueString())
	startDate := r.Configuration.StartDate.ValueString()
	configuration := shared.SourceAmplitude{
		APIKey:           apiKey,
		DataRegion:       dataRegion,
		RequestTimeRange: requestTimeRange,
		SecretKey:        secretKey,
		SourceType:       sourceType,
		StartDate:        startDate,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceAmplitudeCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceAmplitudeResourceModel) ToDeleteSDKType() *shared.SourceAmplitudeCreateRequest {
	out := r.ToCreateSDKType()
	return out
}
