// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	customTypes "airbyte/internal/sdk/pkg/types"
)

func (r *SourceExchangeRatesResourceModel) ToCreateSDKType() *shared.SourceExchangeRatesCreateRequest {
	accessKey := r.Configuration.AccessKey.ValueString()
	base := new(string)
	if !r.Configuration.Base.IsUnknown() && !r.Configuration.Base.IsNull() {
		*base = r.Configuration.Base.ValueString()
	} else {
		base = nil
	}
	ignoreWeekends := new(bool)
	if !r.Configuration.IgnoreWeekends.IsUnknown() && !r.Configuration.IgnoreWeekends.IsNull() {
		*ignoreWeekends = r.Configuration.IgnoreWeekends.ValueBool()
	} else {
		ignoreWeekends = nil
	}
	sourceType := shared.SourceExchangeRatesExchangeRatesEnum(r.Configuration.SourceType.ValueString())
	startDate, _ := customTypes.NewDate(r.Configuration.StartDate.ValueString())
	configuration := shared.SourceExchangeRates{
		AccessKey:      accessKey,
		Base:           base,
		IgnoreWeekends: ignoreWeekends,
		SourceType:     sourceType,
		StartDate:      startDate,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceExchangeRatesCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceExchangeRatesResourceModel) ToDeleteSDKType() *shared.SourceExchangeRatesCreateRequest {
	out := r.ToCreateSDKType()
	return out
}
