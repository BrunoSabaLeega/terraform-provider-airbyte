// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
)

func (r *SourceZenloopResourceModel) ToCreateSDKType() *shared.SourceZenloopCreateRequest {
	apiToken := r.Configuration.APIToken.ValueString()
	dateFrom := new(string)
	if !r.Configuration.DateFrom.IsUnknown() && !r.Configuration.DateFrom.IsNull() {
		*dateFrom = r.Configuration.DateFrom.ValueString()
	} else {
		dateFrom = nil
	}
	sourceType := shared.SourceZenloopZenloopEnum(r.Configuration.SourceType.ValueString())
	surveyGroupID := new(string)
	if !r.Configuration.SurveyGroupID.IsUnknown() && !r.Configuration.SurveyGroupID.IsNull() {
		*surveyGroupID = r.Configuration.SurveyGroupID.ValueString()
	} else {
		surveyGroupID = nil
	}
	surveyID := new(string)
	if !r.Configuration.SurveyID.IsUnknown() && !r.Configuration.SurveyID.IsNull() {
		*surveyID = r.Configuration.SurveyID.ValueString()
	} else {
		surveyID = nil
	}
	configuration := shared.SourceZenloop{
		APIToken:      apiToken,
		DateFrom:      dateFrom,
		SourceType:    sourceType,
		SurveyGroupID: surveyGroupID,
		SurveyID:      surveyID,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceZenloopCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceZenloopResourceModel) ToDeleteSDKType() *shared.SourceZenloopCreateRequest {
	out := r.ToCreateSDKType()
	return out
}
