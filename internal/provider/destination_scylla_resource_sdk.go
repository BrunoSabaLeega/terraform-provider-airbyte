// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *DestinationScyllaResourceModel) ToCreateSDKType() *shared.DestinationScyllaCreateRequest {
	address := r.Configuration.Address.ValueString()
	destinationType := shared.DestinationScyllaScylla(r.Configuration.DestinationType.ValueString())
	keyspace := r.Configuration.Keyspace.ValueString()
	password := r.Configuration.Password.ValueString()
	port := r.Configuration.Port.ValueInt64()
	replication := new(int64)
	if !r.Configuration.Replication.IsUnknown() && !r.Configuration.Replication.IsNull() {
		*replication = r.Configuration.Replication.ValueInt64()
	} else {
		replication = nil
	}
	username := r.Configuration.Username.ValueString()
	configuration := shared.DestinationScylla{
		Address:         address,
		DestinationType: destinationType,
		Keyspace:        keyspace,
		Password:        password,
		Port:            port,
		Replication:     replication,
		Username:        username,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.DestinationScyllaCreateRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *DestinationScyllaResourceModel) ToUpdateSDKType() *shared.DestinationScyllaPutRequest {
	address := r.Configuration.Address.ValueString()
	keyspace := r.Configuration.Keyspace.ValueString()
	password := r.Configuration.Password.ValueString()
	port := r.Configuration.Port.ValueInt64()
	replication := new(int64)
	if !r.Configuration.Replication.IsUnknown() && !r.Configuration.Replication.IsNull() {
		*replication = r.Configuration.Replication.ValueInt64()
	} else {
		replication = nil
	}
	username := r.Configuration.Username.ValueString()
	configuration := shared.DestinationScyllaUpdate{
		Address:     address,
		Keyspace:    keyspace,
		Password:    password,
		Port:        port,
		Replication: replication,
		Username:    username,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.DestinationScyllaPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *DestinationScyllaResourceModel) ToDeleteSDKType() *shared.DestinationScyllaCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *DestinationScyllaResourceModel) RefreshFromCreateResponse(resp *shared.DestinationResponse) {
	r.DestinationID = types.StringValue(resp.DestinationID)
	r.DestinationType = types.StringValue(resp.DestinationType)
	r.Name = types.StringValue(resp.Name)
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}
