// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
)

func (r *SourceMetabaseResourceModel) ToCreateSDKType() *shared.SourceMetabaseCreateRequest {
	instanceAPIURL := r.Configuration.InstanceAPIURL.ValueString()
	password := new(string)
	if !r.Configuration.Password.IsUnknown() && !r.Configuration.Password.IsNull() {
		*password = r.Configuration.Password.ValueString()
	} else {
		password = nil
	}
	sessionToken := new(string)
	if !r.Configuration.SessionToken.IsUnknown() && !r.Configuration.SessionToken.IsNull() {
		*sessionToken = r.Configuration.SessionToken.ValueString()
	} else {
		sessionToken = nil
	}
	sourceType := shared.SourceMetabaseMetabaseEnum(r.Configuration.SourceType.ValueString())
	username := new(string)
	if !r.Configuration.Username.IsUnknown() && !r.Configuration.Username.IsNull() {
		*username = r.Configuration.Username.ValueString()
	} else {
		username = nil
	}
	configuration := shared.SourceMetabase{
		InstanceAPIURL: instanceAPIURL,
		Password:       password,
		SessionToken:   sessionToken,
		SourceType:     sourceType,
		Username:       username,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceMetabaseCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceMetabaseResourceModel) ToDeleteSDKType() *shared.SourceMetabaseCreateRequest {
	out := r.ToCreateSDKType()
	return out
}
